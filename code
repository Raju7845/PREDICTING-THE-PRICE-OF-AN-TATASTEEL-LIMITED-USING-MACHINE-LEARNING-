import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import numpy as np
import matplotlib.pyplot as plt

# Step 1: Load your dataset
data = pd.read_csv("C:/Users/theri/Downloads/Quote-Equity-TATASTEEL-EQ-14-11-2023-to-13-11-2024.csv")

# Step 2: Clean and preprocess the data
# Strip whitespace from column names, if any
data.columns = data.columns.str.strip()

# Convert 'Date' column to datetime format
data['Date'] = pd.to_datetime(data['Date'], errors='coerce')

# Drop any rows where 'Date' couldn't be converted (NaT)
data = data.dropna(subset=['Date'])

# Sort data by date
data = data.sort_values('Date')

# Create a numerical index for the number of days
data['Day'] = np.arange(len(data))

# Step 3: Define features (X) and target (y)
# Using 'Day' as the feature and 'Close' as the target for prediction
X = data[['Day']]
y = data['close']  # Assuming 'close' is the column with the closing prices; adjust if necessary

# Step 4: Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Step 5: Create and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 6: Make predictions
y_pred = model.predict(X_test)

# Step 7: Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

# Step 8: Plot the results
plt.figure(figsize=(10, 6))
plt.plot(data['Day'], data['close'], label="Actual Price", color="blue")
plt.scatter(X_test, y_pred, label="Predicted Price", color="red", marker="x")
plt.xlabel("Day")
plt.ylabel("Stock Price (INR)")
plt.title("Stock Price Prediction with Linear Regression")
plt.legend()
plt.show()

# Step 9: Predict future prices
# Predict the price for the next day after the last date in the dataset
# Predict the price for the next day after the last date in the dataset
next_day = pd.DataFrame({'Day': [data['Day'].iloc[-1] + 1]})
future_price = model.predict(next_day)
print(f"Predicted price for the next day: {future_price[0]}")

